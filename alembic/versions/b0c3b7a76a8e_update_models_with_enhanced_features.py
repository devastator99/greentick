"""update_models_with_enhanced_features

Revision ID: b0c3b7a76a8e
Revises: b620ac23b7dd
Create Date: 2025-09-15 18:10:00.402216

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b0c3b7a76a8e'
down_revision: Union[str, Sequence[str], None] = 'b620ac23b7dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('razorpay_payment_id', sa.String(), nullable=True),
    sa.Column('razorpay_order_id', sa.String(), nullable=True),
    sa.Column('payment_link', sa.String(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.add_column('customers', sa.Column('notes', sa.Text(), nullable=True))
    op.add_column('customers', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('customers', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('reminders', sa.Column('template_id', sa.String(), nullable=True))
    op.add_column('reminders', sa.Column('template_variables', sa.JSON(), nullable=True))
    op.add_column('reminders', sa.Column('frequency', sa.String(), nullable=True))
    op.add_column('reminders', sa.Column('recurring_end_date', sa.DateTime(), nullable=True))
    op.add_column('reminders', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('reminders', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('phone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('business_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('business_logo', sa.String(), nullable=True))
    op.add_column('users', sa.Column('business_whatsapp', sa.String(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'business_whatsapp')
    op.drop_column('users', 'business_logo')
    op.drop_column('users', 'business_name')
    op.drop_column('users', 'phone')
    op.drop_column('reminders', 'updated_at')
    op.drop_column('reminders', 'created_at')
    op.drop_column('reminders', 'recurring_end_date')
    op.drop_column('reminders', 'frequency')
    op.drop_column('reminders', 'template_variables')
    op.drop_column('reminders', 'template_id')
    op.drop_column('customers', 'updated_at')
    op.drop_column('customers', 'created_at')
    op.drop_column('customers', 'notes')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    # ### end Alembic commands ###
